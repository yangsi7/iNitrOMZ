{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c13333\c13333\c13333;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 190418 Simon\'92s Comments\
\
\pard\pardeftab720\sl220\partightenfactor0

\f1\b0\fs20 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Just a few random comments I wanted to share:\
\pard\pardeftab720\sl220\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl220\partightenfactor0
\cf2 \cb3 (1) The set up is over the ETSP for now. I have yet to make the forcing files for the ETNP. But this should come soon. In any case you can vary the export flux (bgc1d_initboundary.m) if you want a less intense OMZ.\
\pard\pardeftab720\sl220\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl220\partightenfactor0
\cf2 \cb3 (2) I created a restart with spun-up tracers. Just pull the new code and it should use the restart by default.\
\pard\pardeftab720\sl220\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl220\partightenfactor0
\cf2 \cb3 (3) When the timestep is too large, NO2 tends to have tiny negative concentrations. Which causes issues when calculating d15N. You can solve this by running with a smaller time-step (model will take longer to run\'85 maybe 5 minutes). For example to run for 150 years with a small timestep, you would set:\'a0\
\'a0bgc.nt = 500000;% Simulation length in timesteps\
\'a0bgc.dt = 10000; % timestep in seconds\
\pard\pardeftab720\sl220\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl220\partightenfactor0
\cf2 \cb3 (4) I have a bunch of function that are useful to calculate d15 values from concentrations and vice-versa (functions/d15N.m, functions/d15NSP.m). Also, you can process the output by running this commented code in bgc_run.m:\
\pard\pardeftab720\sl220\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl220\partightenfactor0

\i \cf2 \cb3 % Process observations to validate the model solution
\i0 \cb1 \

\i \cb3 Tracer.name = \{'o2' 'no3' 'poc' 'po4' 'n2o' 'nh4' 'no2' 'n2'\};
\i0 \cb1 \

\i \cb3 if strcmp(bgc.region,'ETNP')
\i0 \cb1 \

\i \cb3 \'a0 \'a0 \'a0 \'a0 load([bgc.root,'/Data/compilation_ETNP_gridded.mat']);
\i0 \cb1 \

\i \cb3 \'a0 \'a0 \'a0 \'a0 Data.names = Tracer.name;
\i0 \cb1 \

\i \cb3 \'a0 \'a0 \'a0 \'a0 Data = GA_data_init(bgc,compilation_ETNP_gridded,Tracer.name);
\i0 \cb1 \

\i \cb3 elseif strcmp(bgc.region,'ETSP')
\i0 \cb1 \

\i \cb3 \'a0 \'a0 \'a0 \'a0 load([bgc.root,'/Data/compilation_ETSP_gridded_Feb232018.mat']);
\i0 \cb1 \

\i \cb3 \'a0 \'a0 \'a0 \'a0 Data.names = Tracer.name;
\i0 \cb1 \

\i \cb3 \'a0 \'a0 \'a0 \'a0 Data = GA_data_init_opt(bgc,compilation_ETSP_gridded,Tracer.name);
\i0 \cb1 \

\i \cb3 end
\i0 \cb1 \
\pard\pardeftab720\sl220\partightenfactor0

\i \cf2 \
\pard\pardeftab720\sl220\partightenfactor0
\cf2 \cb3 % Process model output for analysis (gathers tracers and diagnostics into the bgc structure)
\i0 \cb1 \

\i \cb3 bgc = bgc1d_postprocess(bgc, Data);
\i0 \cb1 \
\pard\pardeftab720\sl220\partightenfactor0

\i \cf2 \
\pard\pardeftab720\sl220\partightenfactor0

\i0 \cf2 \cb3 This will dump the output into bgc. From there you can access for example o2 with plot(bgc.o2,bgc.zgrid) or the d15N of NO3 with plot(bgc.d15no3,bgc.zgrid). This should provide an easy way for you to test.\
\pard\pardeftab720\sl220\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl220\partightenfactor0
\cf2 \cb3 (4) I think the isotope output makes a bit more sense now (d15NO3 at least looks as I would expect it). For the rest I leave it up to you!\
\pard\pardeftab720\sl220\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl220\partightenfactor0
\cf2 \cb3 -Simon\
}